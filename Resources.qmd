---
title: "Resources"
---

## These Web Pages

These web pages are available in both a static version (<https://pluto.coe.fsu.edu/PeanutTutorial>) and a source version (<https://github.com/ralmond/PeanutTutorial>).

The easiest way to access the Peanut tutorial is to use [R Studio](https://posit.co/products/open-source/rstudio/).  Go to new project, and select "From Version control", then "Git" then put 'https://pluto.coe.fsu.edu/ralmond/PeanutTutorial.git' in the 'Repository URL' box.

![Git dialog](img/GitDialog.png)

The `.qmd` files contain a mixture of text and R code.  You will need
to download the `quarto` package for these to work properly, but R Studio will guide you through this.

## Netica

There are a number of packages that will do the basic Bayesian network
computations. For the purposes of this tutorial, we are using
[Netica](https://norsys.com)â“‡. Netica is available in two versions: a
graphical user interface (GUI) version and an application programmers
interface (API). We will use both in this class.

Netica also comes in both a free (but not open source) version and a
paid version. The paid version is used by purchasing an unlock code
from Norsys. The free version is specifically for training and
evaluation. It is limited in the size of the networks, but it has
sufficient capacity for most of the exercises in this tutorial.

-   Go to `https://norsys.com` and download the latest version of [`Netica.exe`](https://norsys.com/downloads/Netica_Win.exe).
-   Unix/linux users: `Netica.exe` runs without major problems under Wine64.
```{bash}
#| eval: FALSE
#| code-fold: TRUE
sudo apt install wine64
curl https://norsys.com/downloads/Netica_Win.exe > Netica_Win.exe
wine64 Netica_Win.exe
wine64 "C:\\Netica\Netica 609\Netica.exe"
```

  - There is also a version of [Cross Over](https://www.codeweavers.com/crossover) for Linux; this uses the same Wine code base, but provides 1-year technical support.  There is also a 30-day free trial.

-  Mac OS.  A couple of options:
  - _Prebuilt wineskin_.  I've used the [wineskin](https://github.com/Gcenx/WineskinServer/) tool to pre-wrap an image.  This is available at [NeticaMac.dmg](https://pluto.coe.fsu.edu/BNinEA/NeticaMac.dmg).
    * This is not properly signed, so will generate issues with the apple quarantine system.  Open the `System Preferences...` and go to the `Security & Privacy` tab.  Unlock (requires admin password) and then select "App Store and identified developers".  Click on the "NeticaSilicon.app", this will give an error message.  Go back to the security and privacy tab, and a button asking if you want to run the application should be there.  Click it to give it permission to run.
  - _Install Wine_    If you are using [homebrew](https://brew.sh), you can try:
```{bash}
#| eval: FALSE
#| code-fold: TRUE
brew install --cask wine-stable
curl https://norsys.com/downloads/Netica_Win.exe > Netica_Win.exe
wine Netica_Win.exe
wine "C:\\Netica\Netica 609\Netica.exe"
```
 - Use [Cross Over](https://www.codeweavers.com/crossover) (see above).  
 
Note, these all install the unlicensed version of Netica.  You will still need to purchase a license key from Norsys (https://norsys.com).  Note that GUI license key and the API license key needed for RNetica, are separate purchase.  (You can buy a combined key but it is twice as expensive).

Brent Borelange (Norsys CEO) has expressed willingness to support Netica run under Wine/Crossover.  (I have not had problems.)

## Peanut and RNetia

The R package `RNetica` provides an R binding of the Netica API
(hence, it requires the API and not GUI license). `RNetica` is
available at <https://ralmond.r-universe.dev/> (source code is at
<https://github.com/ralmond/>).

If you have not already done so, we recommend downloading [R
Studio](https://posit.co/products/open-source/rstudio/), in the
process of installing R Studio, you will need to install R itself
(\<https://cloud.r-project.org/).

Once you have R installed, you can install `RNetica` and running
related packages by running the following code:

```{r InstallRNetica}
if (!require('PNetica')) 
  install.packages(c('CPTtootls','RNetica','Peanut','PNetica'),
                   repos = c('https://ralmond.r-universe.dev',    'https://cloud.r-project.org'))
```

This bundle contains the following packages:

-   `CPTtools` --- A collection of functions for making conditional probability tables. (Does not depend on Netica.)
-   `RNetica` --- An R binding of the Netica API. Note that the installer downloads and installs Netica, so cognizant of the Netica License.
-   `Peanut` --- An object oriented layer for working with parameterized networks (`PNet`s).\
-   `PNetica` --- All of the Netica specific implementation of the `Peanut` protocol.

The intention is that `Peanut` (and `CPTtools`) are open
implementation protocols that are independent of the specific Bayes
net implementation. I'm currently looking for volunteers to build the
equivalent of `PNetica` for other Bayes net engines.

If you purchase a license key from Norsys, I recommend putting it into the `.Renviron` file in your home directory.
```{bash}
#|eval: false
NETICA_LICENSE_KEY="+AlmondR/FloridaStateU/120,310-6-A/XXXXX"
```
The `RNetica` package will set the license key from this variable if it is present when it launches.


## Sample Networks.

The following zip files contain the sample networks used in the
tutorial.  (If you have downloaded the complete tutorial from github,
you have already downloaded these and can skip this step.)

* [IntroNets.zip](https://pluto.coe.fsu.edu/PeanutTutorial/IntroNets.zip)  Used in Session 1
* [CompensatoryConjunctiveNets.zip](https://pluto.coe.fsu.edu/PeanutTutorial/CompensatoryConjunctiveNets.zip)  Used in Session 2
* [miniACED](https://pluto.coe.fsu.edu/PeanutTutorial/miniACED.zip)  Used in Session 3a
* [LearningNets](https://pluto.coe.fsu.edu/PeanutTutorial/LearningNets.zip)  Used in Session ??
* [DBNExamples](https://pluto.coe.fsu.edu/PeanutTutorial/DBNExamples.zip) Used in Session 4

Download these and unzip them in the directory from which you will be running R.

(If you put them somewhere else, you may need to adjust scripts to point to the right directory.)

